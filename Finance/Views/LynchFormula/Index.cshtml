@using Finance.Domain;
@model IEnumerable<Lynch>

    <h1 class="text-center display-4">Fórmula de Peter Lynch</h1>
    <p>Peter Lynch, um dos investidores mais bem-sucedidos e respeitados de todos os tempos, desenvolveu a "Fórmula de Lynch" para ajudar a avaliar o valor potencial de uma ação. Sua fórmula é baseada no PEG Ratio (Price/Earnings to Growth Ratio).</p>

    <h2>Fórmula de Peter Lynch</h2>
    <pre>
        PEG Ratio = P/E Ratio / Crescimento Anual dos Lucros
    </pre>
    <p>Onde:</p>
    <ul>
        <li><strong>P/E Ratio</strong> = Relação preço/lucro (Price/Earnings)</li>
        <li><strong>Crescimento Anual dos Lucros</strong> = Taxa de crescimento anual projetada dos lucros</li>
    </ul>

    <h2>Interpretando o PEG Ratio</h2>
    <ul>
        <li><strong>PEG < 1</strong>: Indica que a ação pode estar subvalorizada em relação ao seu crescimento esperado.</li>
        <li><strong>PEG = 1</strong>: A ação está precificada de forma justa.</li>
        <li><strong>PEG > 1</strong>: Indica que a ação pode estar supervalorizada.</li>
    </ul>

    <h2>Passos para Calcular a Fórmula de Lynch</h2>
    <ol>
        <li>
            <strong>Obter o P/E Ratio (Relação Preço/Lucro):</strong>
            <p>Essa informação pode ser encontrada em sites financeiros, relatórios de analistas ou relatórios de resultados das empresas.</p>
        </li>
        <li>
            <strong>Estimar a Taxa de Crescimento Anual dos Lucros:</strong>
            <p>Baseie-se em projeções de analistas, histórico de crescimento da empresa e suas próprias expectativas de crescimento futuro.</p>
        </li>
        <li>
            <strong>Calcular o PEG Ratio:</strong>
            <p>Use a fórmula para calcular o PEG Ratio:</p>
            <pre>
                PEG Ratio = P/E Ratio / Crescimento Anual dos Lucros
            </pre>
        </li>
    </ol>

    <h2>Exemplo Prático</h2>
    <p>Suponha que você esteja avaliando a empresa ABC S.A.:</p>
    <ul>
        <li>P/E Ratio: 15</li>
        <li>Crescimento Anual dos Lucros: 10% (0.10)</li>
    </ul>
    <p>Aplicando a fórmula de Lynch:</p>
    <pre>
        PEG Ratio = 15 / 0.10 = 1.5
    </pre>
    <p>Neste exemplo, o PEG Ratio é 1.5, indicando que a ação pode estar supervalorizada em relação ao seu crescimento esperado.</p>

    <h2>Considerações Importantes</h2>
    <ul>
        <li><strong>Estimativas e Projeções:</strong> A precisão das estimativas de crescimento é crucial. Projeções excessivamente otimistas ou pessimistas podem distorcer o PEG Ratio calculado.</li>
        <li><strong>Contexto do Mercado:</strong> Considere o contexto econômico e setorial ao aplicar a fórmula, pois fatores externos podem impactar significativamente o desempenho futuro da empresa.</li>
        <li><strong>Diversificação:</strong> Mesmo que uma ação pareça atrativa com base no PEG Ratio, é importante diversificar seus investimentos para mitigar riscos.</li>
    </ul>

    <h2>Referências e Ferramentas Úteis</h2>
    <ul>
        <li><a href="https://www.investopedia.com/terms/p/peterlynch.asp">Peter Lynch - Investopedia</a></li>
        <li><a href="https://www.investopedia.com/terms/p/pegratio.asp">PEG Ratio - Investopedia</a></li>
        <li><a href="https://www.fundamentus.com.br">Relatórios Financeiros - Fundamentus</a></li>
        <li><a href="https://www.statusinvest.com.br">Aplicação da Fórmula de Lynch - Status Invest</a></li>
    </ul>

<h2 class="text-center display-4">Ranking:</h2>

<h5 class="text-end" style="font-weight: 200;"><strong>Total de ativos, Ações, Bdrs e Fiis @Model.Count() localizados</strong></h5>

<h2>Filtrar</h2>
<input type="text" id="filtroInput" onkeyup="filtrarTabela()" placeholder="Digite para filtrar...">

<h2>Opções</h2>
<button id="filtroOrderByKindBdr" name="filtroOrderByKindBdr" class="btn btn-primary btn-sm">Bdr</button>
<button id="filtroOrderByKindFii" name="filtroOrderByKindFii" class="btn btn-primary btn-sm">Fii</button>
<button id="filtroOrderByKindStock" name="filtroOrderByKindStock" class="btn btn-primary btn-sm">Stock</button>

<div class="btn-group" role="group" aria-label="Basic example">
    <button type="button" id="ordenarPorPriceDesc" name="ordenarPorPriceDesc" class="btn btn-primary btn-sm">
        <i class="fa-solid fa-arrow-up fa-fw" aria-hidden="true"></i>
    </button>
    <button type="button" class="btn btn-primary btn-sm">Preço</button>
    <button type="button" id="ordenarPorPriceAsc" name="ordenarPorPriceAsc" class="btn btn-primary btn-sm">
        <i class="fa-solid fa-arrow-down fa-fw" aria-hidden="true"></i>
    </button>
</div>

<div class="btn-group" role="group" aria-label="Basic example">
    <button type="button" id="ordenarPorYieldDesc" name="ordenarPorYieldDesc" class="btn btn-primary btn-sm">
        <i class="fa-solid fa-arrow-up fa-fw" aria-hidden="true"></i>
    </button>
    <button type="button" class="btn btn-primary btn-sm">PERatio</button>
    <button type="button" id="ordenarPorYieldAsc" name="ordenarPorYieldAsc" class="btn btn-primary btn-sm">
        <i class="fa-solid fa-arrow-down fa-fw" aria-hidden="true"></i>
    </button>
</div>


<div class="btn-group" role="group" aria-label="Basic example">
    <button type="button" id="ordenarPorResultDesc" name="ordenarPorResultDesc" class="btn btn-primary btn-sm">
        <i class="fa-solid fa-arrow-up fa-fw" aria-hidden="true"></i>
    </button>
    <button type="button" class="btn btn-primary btn-sm">PEGRatio</button>
    <button type="button" id="ordenarPorResultAsc" name="ordenarPorResultAsc" class="btn btn-primary btn-sm">
        <i class="fa-solid fa-arrow-down fa-fw" aria-hidden="true"></i>
    </button>
</div>

<button id="cleanModel" name="cleanModel" class="btn btn-primary btn-sm">Limpar Filtros</button>

<div id="tabelaContainer">

    @Html.Partial("_TabelaLynch", Model)

</div>

<script>

    function filtrarTabela() {
        var input, filter, table, tr, td, i, j, txtValue;
        input = document.getElementById("filtroInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("minhaTabela");
        tr = table.getElementsByTagName("tr");

        for (i = 1; i < tr.length; i++) {
            tr[i].style.display = "none";
            td = tr[i].getElementsByTagName("td");
            for (j = 0; j < td.length; j++) {
                if (td[j]) {
                    txtValue = td[j].textContent || td[j].innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                        break;
                    }
                }
            }
        }
    }

    var model = @Html.Raw(Json.Serialize(Model));

    function updateModelAndRender(url) {
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(model)
        })
            .then(response => response.json())
            .then(updatedModel => {
                model = updatedModel; // Atualize o modelo com a resposta do servidor
                renderTable(model);
            })
            .catch(error => console.error('Error:', error));
    }

    function renderTable(updatedModel) {
        fetch('/LynchFormula/RenderTable', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(updatedModel)
        })
            .then(response => response.text())
            .then(html => {
                document.getElementById("tabelaContainer").innerHTML = html;
            })
            .catch(error => console.error('Error:', error));
    }

    function cleanModelAndRender() {
        fetch('/LynchFormula/Clean')
            .then(response => response.json())
            .then(cleanedModel => {
                model = cleanedModel; // Atualize o modelo com o modelo limpo
                renderTable(model);
            })
            .catch(error => console.error('Error:', error));
    }

    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("ordenarPorYieldAsc").addEventListener("click", function () {
            updateModelAndRender('/LynchFormula/OrderByAscendingYield');
        });

        document.getElementById("ordenarPorYieldDesc").addEventListener("click", function () {
            updateModelAndRender('/LynchFormula/OrderByDescendingYield');
        });

        document.getElementById("filtroOrderByKindFii").addEventListener("click", function () {
            updateModelAndRender('/LynchFormula/OrderByKindFii');
        });

        document.getElementById("filtroOrderByKindStock").addEventListener("click", function () {
            updateModelAndRender('/LynchFormula/OrderByKindStock');
        });

        document.getElementById("filtroOrderByKindBdr").addEventListener("click", function () {
            updateModelAndRender('/LynchFormula/OrderByKindBdr');
        });

        document.getElementById("ordenarPorResultAsc").addEventListener("click", function () {
            updateModelAndRender('/LynchFormula/OrderByAscendingResult');
        });

        document.getElementById("ordenarPorResultDesc").addEventListener("click", function () {
            updateModelAndRender('/LynchFormula/OrderByDescendingResult');
        });

        document.getElementById("ordenarPorPriceAsc").addEventListener("click", function () {
            updateModelAndRender('/LynchFormula/OrderByAscendingPrice');
        });

        document.getElementById("ordenarPorPriceDesc").addEventListener("click", function () {
            updateModelAndRender('/LynchFormula/OrderByDescendingPrice');
        });

        document.getElementById("cleanModel").addEventListener("click", function () {
            cleanModelAndRender();
        });
    });
</script>
