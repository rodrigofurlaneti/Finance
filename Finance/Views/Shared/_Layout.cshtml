@{
    var highLowB3List = ViewData["HighLowB3"] as IEnumerable<Finance.Domain.Active>;
}
<!DOCTYPE html>
<html lang="pt-br">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>@ViewData["Title"] - Finanças</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
        <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/Finance.styles.css" asp-append-version="true" />
        <link href="css/font-awesome.css" rel="stylesheet" type="text/css">
        <link rel="stylesheet" href="owl-carousel/assets/owl.carousel.min.css" type="text/css">
        <link rel="stylesheet" href="css/bootstrap.min.css">
        <link rel="stylesheet" href="css/style.css">
    </head>
<body>
    @if (highLowB3List != null)
    {
        <div class="ticker-container">
            <div class="ticker-wrap">
                <div class="ticker">
                    @foreach (var active in highLowB3List)
                    {
                        <div class="ticker-item">
                            <img src="@active.Logo.Small" alt="@active.Name" class="ticker-logo" />
                            <span>@active.Name &nbsp</span>
                            <span>@active.Symbol &nbsp</span>
                            <span>@active.Price.ToString("C")</span>
                            <span class="ticker-change @(active.ChangePercent >= 0 ? "positive" : "negative")">
                                @(active.ChangePercent >= 0 ? "+" : "")@active.ChangePercent.ToString()
                            </span>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    
    <nav class="navbar navbar-expand-lg navbar-light bg-light bg-transparent" id="gtco-main-nav">
        <div class="container">
            <a class="navbar-brand">+</a>
            <button class="navbar-toggler" data-target="#my-nav" onclick="myFunction(this)" data-toggle="collapse">
                <span class="bar1"></span> <span class="bar2"></span> <span class="bar3"></span>
            </button>
            <div id="my-nav" class="collapse navbar-collapse">
                <ul class="navbar-nav mr-auto">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Início</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="StockExchange" asp-action="Index">Ações</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="BrazilianDepositaryReceipts" asp-action="Index">Bdr</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="RealEstateInvestmentFund" asp-action="Index">Fii</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="AllStockExchange" asp-action="Index">Todos</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="CalculationOfTheBarsi" asp-action="Index">Barsi</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="AnalyzeIndicators" asp-action="Index">Indicadores</a>
                        </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

        <script src="js/jquery-3.3.1.slim.min.js"></script>
        <script src="js/popper.min.js"></script>
        <script src="js/bootstrap.min.js"></script>
        <script src="owl-carousel/owl.carousel.min.js"></script>
        <script src="js/main.js"></script>
        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script src="~/js/site.js" asp-append-version="true"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        @await RenderSectionAsync("Scripts", required: false)
    </body>
</html>

<script>
    $(document).ready(function () {

        // Captura a localização geográfica e o endereço IP
        function getAccessData() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(sendAccessData, showError);
            } else {
                console.log("Geolocalização não é suportada por este navegador.");
            }
        }

        function sendAccessData(position) {
            const latitude = position.coords.latitude;
            const longitude = position.coords.longitude;
            let userAgent = navigator.userAgent;

            // Identificando o sistema operacional
            if (navigator.userAgent.indexOf("Windows NT 10.0") != -1) userAgent = "Windows 10";
            if (navigator.userAgent.indexOf("Windows NT 6.3") != -1) userAgent = "Windows 8.1";
            if (navigator.userAgent.indexOf("Windows NT 6.2") != -1) userAgent = "Windows 8";
            if (navigator.userAgent.indexOf("Windows NT 6.1") != -1) userAgent = "Windows 7";
            if (navigator.userAgent.indexOf("Windows NT 6.0") != -1) userAgent = "Windows Vista";
            if (navigator.userAgent.indexOf("Windows NT 5.2") != -1) userAgent = "Windows Server 2003/XP x64";
            if (navigator.userAgent.indexOf("Windows NT 5.1") != -1) userAgent = "Windows XP";
            if (navigator.userAgent.indexOf("Windows XP") != -1) userAgent = "Windows XP";
            if (navigator.userAgent.indexOf("Windows NT 5.0") != -1) userAgent = "Windows 2000";
            if (navigator.userAgent.indexOf("Windows ME") != -1) userAgent = "Windows ME";
            if (navigator.userAgent.indexOf("win98") != -1) userAgent = "Windows 98";
            if (navigator.userAgent.indexOf("win95") != -1) userAgent = "Windows 95";
            if (navigator.userAgent.indexOf("win16") != -1) userAgent = "Windows 3.11";
            if (navigator.userAgent.indexOf("android") != -1) userAgent = "Android";
            if (navigator.userAgent.indexOf("Mac") != -1) userAgent = "Mac/iOS";
            if (navigator.userAgent.indexOf("macintosh|mac os x") != -1) userAgent = "Mac OS X";
            if (navigator.userAgent.indexOf("mac_powerpc") != -1) userAgent = "Mac OS 9";
            if (navigator.userAgent.indexOf("iphone") != -1) userAgent = "Iphone";
            if (navigator.userAgent.indexOf("ipad") != -1) userAgent = "Ipad";
            if (navigator.userAgent.indexOf("ipod") != -1) userAgent = "Ipod";
            if (navigator.userAgent.indexOf("X11") != -1) userAgent = "UNIX";
            if (navigator.userAgent.indexOf("Linux") != -1) userAgent = "Linux";
            if (navigator.userAgent.indexOf("ubuntu") != -1) userAgent = "Ubuntu";
            if (navigator.userAgent.indexOf("webos") != -1) userAgent = "Mobile";
            if (navigator.userAgent.indexOf("blackberry") != -1) userAgent = "Blackberry";


            // Obtendo o endereço IP do cliente (usando uma API pública)
            fetch('https://api.ipify.org?format=json')
                .then(response => response.json())
                .then(data => {
                    const accessLog = {
                        latitude: latitude.toString(),
                        longitude: longitude.toString(),
                        userAgent: userAgent,
                        internetProtocol: data.ip,
                        dateInsert: new Date().toISOString()
                    };

                    // Envia os dados para a API
                    fetch('/AccessLog/CaptureAccessData', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(accessLog)
                    })
                        .then(response => response.json())
                        .then(data => {
                            console.log('Dados de acesso enviados com sucesso:', data);
                        })
                        .catch(error => {
                            console.error('Erro ao enviar dados de acesso:', error);
                        });
                })
                .catch(error => {
                    console.error('Erro ao obter o endereço IP:', error);
                });
        }

        function showError(error) {
            switch (error.code) {
                case error.PERMISSION_DENIED:
                    console.log("Usuário negou a solicitação de Geolocalização.");
                    break;
                case error.POSITION_UNAVAILABLE:
                    console.log("Informação de localização não está disponível.");
                    break;
                case error.TIMEOUT:
                    console.log("A requisição para obter a localização expirou.");
                    break;
                case error.UNKNOWN_ERROR:
                    console.log("Um erro desconhecido ocorreu.");
                    break;
            }
        }

        // Chama a função para capturar e enviar os dados de acesso ao carregar a página
        getAccessData();

        // JavaScript to enable the ticker animation
        let ticker = $('.ticker');
        let tickerWidth = ticker.width();
        let windowWidth = $(window).width();
        let speed = 50000;

        function moveTicker() {
            ticker.animate({ marginLeft: `-${tickerWidth}px` }, speed, 'linear', function () {
                ticker.css('margin-left', `${windowWidth}px`);
                moveTicker();
            });
        }

        moveTicker();
    });
</script>